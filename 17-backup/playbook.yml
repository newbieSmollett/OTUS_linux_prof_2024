---
- hosts: backup
  become: yes
  tasks:
    - name: Create mount point
      ansible.builtin.file:
        path: /var/backup
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Format and mount disk
      community.general.filesystem:
        fstype: ext4
        dev: /dev/sdb
        opts: -F

    - name: Mount disk
      ansible.posix.mount:
        path: /var/backup
        src: /dev/sdb
        fstype: ext4
        opts: rw,noatime
        state: mounted

    - name: Create user borg
      user:
        name: borg
        home: /home/borg
        shell: /bin/bash
        generate_ssh_key: yes
    - name: Update apt cache
      apt:
        update_cache: yes

    - name: Change owner and group of /var/backup/
      file:
        path: /var/backup/
        owner: borg
        group: borg
        state: directory
        recurse: yes

    - name: Install BorgBackup
      apt:
        name: borgbackup
        state: present

    # - name: Create authorized_keys folder
    #   file:
    #     path: /home/borg/.ssh/authorized_keys
    #     state: directory
    #     owner: borg
    #     group: borg
    #     mode: '0755'

    # - name: Copy ssh key to backup
    #   copy:
    #     src: ./id_rsa.pub
    #     dest: /home/borg/.ssh/authorized_keys

    - name: Copy SSH key
      authorized_key:
        user: borg
        key: "{{ lookup('file', './id_rsa.pub') }}"

- hosts: client
  become: yes
  tasks:
    - name: Generate SSH key
      ansible.builtin.shell: ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa -N ""
      args:
        creates: ~/.ssh/id_rsa

    - name: Fetch file from client
      fetch:
        src: /root/.ssh/id_rsa.pub
        dest: ./id_rsa.pub
        flat: yes

    - name: Install BorgBackup
      apt:
        name: borgbackup
        state: present

    - name: Initialize Borg repository
      ansible.builtin.shell: borg init --encryption=repokey borg@192.168.56.11:/var/backup/
      # become: yes
      # become_user: borg


# - name: Copy file from clietn to local
#   hosts: client
#   tasks:
#     - name: Fetch file from client
#       fetch:
#         src: /root/.ssh/id_rsa.pub
#         dest: .

# - name: Copy file to host2
#   hosts: host2
#   tasks:
#     - name: Copy file to host2
#       copy:
#         src: /path/to/destination/file
#         dest: /path/to/destination/file
