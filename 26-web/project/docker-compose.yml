version: '3'
services:
  node-app:
    build: ./node
    ports:
      - "4000:4000"
    environment:
      - NODE_OPTIONS=--max-old-space-size=8192
    volumes:
      - ./node:/usr/src/node-app
      - /usr/src/node-app/node_modules
    networks:
      - app-network

  flask-app:
    build: ./flask
    ports:
      - "3001:3001"
    volumes:
      - ./flask:/usr/src/flask-app
    networks:
      - app-network

  nginx:
    image: nginx:1.15.12-alpine
    build:
      context: .
      dockerfile: ./nginx/Dockerfile
    container_name: nginx
    restart: unless-stopped
    ports:
      - 8083:8083
      - 8081:8081
      - 8082:8082
    networks:
      - app-network
    volumes:
      - ./conf.d:/etc/nginx/conf.d
      - ./wordpress:/var/www/html
    depends_on: 
      - flask-app
      - node-app

  db:
    image: mysql:5.7
    volumes:
      - db_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress

  wordpress:
    depends_on:
      - db
    image: wordpress:latest
    ports:
      - "9000:80"
    restart: always
    environment:
      WORDPRESS_DB_HOST: db:3306
      WORDPRESS_DB_USER: wordpress
      WORDPRESS_DB_PASSWORD: wordpress
      WORDPRESS_DB_NAME: wordpress
    volumes:
      - ./wordpress:/var/www/html
    networks:
      - app-network

volumes:
  db_data: {}
  wordpress_data: {}



networks:
  app-network:
    driver: bridge
